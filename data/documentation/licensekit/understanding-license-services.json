{"metadata":{"role":"article","title":"Understanding License Services","roleHeading":"Article","modules":[{"name":"LicenseKit"}]},"hierarchy":{"paths":[["doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit"]]},"seeAlsoSections":[{"title":"Articles","generated":true,"identifiers":["doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/Understanding-Licenses"],"anchor":"Articles"}],"kind":"article","schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"LicenseKit has many different service types, which are defined by the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/LicenseServiceType"},{"type":"text","text":" enum:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/LicenseServiceType\/api(configuration:cached:urlSession:licenseMapping:)","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/LicenseServiceType\/binary(licenses:)","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/LicenseServiceType\/cached(service:)","type":"reference"}]}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/LicenseServiceType\/fileName(fileName:fileExtension:bundle:componentSeparator:licenseMapping:)","isActive":true}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/LicenseServiceType\/fileUrl(fileUrl:componentSeparator:licenseMapping:)","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/LicenseServiceType\/gumroad(productId:cached:urlSession:licenseMapping:)"}]}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/LicenseServiceType\/proxy(services:)"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"You can specify which service type(s) that you want to use when you create your "},{"identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/LicenseEngine","isActive":true,"type":"reference"},{"text":" instance.","type":"text"}],"type":"paragraph"},{"anchor":"API-licenses","level":2,"type":"heading","text":"API licenses"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use an API service to fetch licenses from a remote Rest API. Connecting over the Internet means that the user must be online. You can use a cached license wrapper to cache successful license validations."}]},{"inlineContent":[{"text":"To map licenses from a specific API, you must define a custom ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" type that can decode a specific API response, for instance:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["struct ApiLicenseModel: Decodable {","","    let licenseKey: String","    let customerName: String","    let tier: String","","    var license: License {","        License(","            licenseKey: licenseKey,","            customer: .init(name: customerName)","            tier: .init(name: tier)","        )","    }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"This custom type would be able to map the following API response:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["{","    \"licenseKey\": \"ABC123\",","    \"customerName\": \"Cool Company Ltd.\",","    \"expirationDate\": \"2027-01-31\"","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can then use an API service to fetch data, by providing a mapping function to decode the data and map it to a "},{"identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/License","isActive":true,"type":"reference"},{"text":":","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let engine = try await LicenseEngine(licenseKey: \"your-key\") {","    try .api(","        configuration: .init(","            url: { licenseKey in URL(string: \"https:\/\/myapi.com\/licenses\/\\(licenseKey)\")! },","            httpMethod: { licenseKey in \"POST\" },","            httpHeaders: { licenseKey in [\"api-token\": \"ejiwaogja=\"] }","        ),","        licenseMapping { data in","            let decoder = JSONDecoder()","            let response = try decoder.decode(ApiLicenseModel.self, from: data)","            License(licenseKey: response.licenseKey)","        }","    )","}"]},{"inlineContent":[{"type":"text","text":"This way to provide a configuration and a mapping function lets you customize this service to great extent."}],"type":"paragraph"},{"type":"heading","text":"Binary licenses","level":2,"anchor":"Binary-licenses"},{"inlineContent":[{"type":"text","text":"Binary licenses are hard-coded into your binary, using plain Swift code, and will be validated on-device. You can define binary licenses by creating static "},{"type":"reference","identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/License","isActive":true},{"type":"text","text":" values, for instance:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["extension License {","","    \/\/\/ A basic license that only defines a license key","    static let basicLicense = License(","        licenseKey: \"DCE54718-A214-40E7-B3E8-3C7B1967F485\")","","    \/\/\/ A license that defines customer, tier, features, etc:","    static let extensiveLicense = License(","        licenseKey: \"ABCDEFGH-IJKL-MNOP-QRST-UVWXYZ123456\"","        customer: .myCustomer,","        tier: .gold,","        expirationDate: Date(year: 2025, month: 01, day: 01),","        allowsExpiration: false,","        platforms: [.iOS, .tvOS],","        bundleIds: [\"com.customer.library\"]","    )","}"]},{"inlineContent":[{"text":"You can create collection extensions to define a convenient collection for all your binary licenses:","type":"text"}],"type":"paragraph"},{"code":["extension Collection where Element == License {","","    static var myProductLicenses: [License.Customer] {","        [.basicLicense, .extensiveLicense]","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"You can then setup your license engine with a binary service that uses your license collection:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let engine = try await LicenseEngine(licenseKey: \"...\") {","   try .binary(licenses: .myProductLicenses)","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Binary licenses are powerful, but require that you to release a new version of your software to add or remove licenses for your product."}]},{"text":"Cached licenses","type":"heading","level":2,"anchor":"Cached-licenses"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use a cached license service to cache any license validation from any other license service. This makes it possible for a user to keep using your software even if the device is temporarily disconnected."}]},{"syntax":"swift","code":["let engine = try await LicenseEngine(licenseKey: \"your-key\") {","    try .cached(","        service: .gumroad(...)","    )","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Any license validations that fail due to a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/License\/ValidationError"},{"type":"text","text":" causes the cache to reset and the validation to fail with the original error."}],"type":"paragraph"},{"level":2,"type":"heading","text":"File licenses","anchor":"File-licenses"},{"inlineContent":[{"type":"text","text":"File-based licenses are defined in files that are bundled with your product, for instance a “licenses.csv” file with a row for each license:"}],"type":"paragraph"},{"syntax":null,"code":["DCE54718-A214-40E7-B3E8-3C7B1967F485,Microsoft,BASIC,2023-10-01","ABCDEFGH-IJKL-MNOP-QRST-UVWXYZ123456,Apple,GOLD,2023-01-01","..."],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"You can then setup your license engine with a file-based service that uses your local license file:","type":"text"}]},{"code":["let engine = try await LicenseEngine(licenseKey: \"...\") {","    try .file(","        fileName: \"licenses\",","        fileExtension: \"csv\",","        componentSeparator: \",\"","    ) { rows in","        rows.map {","            License(","                licenseKey: row[0],","                customer: .init(name: row[1])","                tier: .init(name: row[2])","            )","        }","    }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The code above parses a “licenses.csv” file in the main bundle, then maps every row to a license by using the first value as license key, the second as customer (company) name, and the third as license "},{"identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/License\/Tier-swift.struct","isActive":true,"type":"reference"},{"text":" (“basic”, “silver”, “enterprise”, etc.).","type":"text"}]},{"inlineContent":[{"type":"text","text":"License files are convenient, but require that you to release a new version of your software to add or remove licenses for your product."}],"type":"paragraph"},{"type":"heading","level":2,"anchor":"Gumroad-licenses","text":"Gumroad licenses"},{"inlineContent":[{"text":"You can use a Gumroad service to fetch licenses from the Gumroad license API, and provide a license mapping function that maps the raw Gumroad response to a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/License","isActive":true},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let engine = try await LicenseEngine(licenseKey: \"your-key\") {","    try .gumroad(","        productId: \"unique-product-id\",","        licenseMapping { response in","            var license = response.license","            \/\/ You can customize or replace this standard license here","            return license","        }","    )","}"]},{"type":"paragraph","inlineContent":[{"text":"You can either just return the response’s standard license, customize or replace it, or map the raw responses in any way you want.","type":"text"}]},{"text":"Service Proxying","type":"heading","anchor":"Service-Proxying","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use a service proxy to combine several services into a single one. This makes is possible to e.g. perform both code-, file- and api-based license validation with a single service, in the sequential order of the provided services."}]},{"code":["let engine = try await LicenseEngine(licenseKey: \"your-key\") {","    try .proxy(","        services: [","            .binary(","                license: license,","                customerLicenses: .all","            ),","            try .gumroad(","                license: license,","                productId: \"unique-product-id\",","                licenseMapping { response in","                    ...","                }","            )","        ]","    )","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Service proxies are needed to fetch licenses from multiple sources, for instance if you sell subscriptions on multiple platforms. You can apply a different "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/License\/Source-swift.enum"},{"text":" to each service to determine from where a license originates.","type":"text"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/Understanding-License-Services"},"variants":[{"paths":["\/documentation\/licensekit\/understanding-license-services"],"traits":[{"interfaceLanguage":"swift"}]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/licensekit\/understanding-license-services"]}],"sections":[],"abstract":[{"text":"This article describes the LicenseKit license service model and how to define and validate licenses.","type":"text"}],"references":{"doc://com.licensekit.LicenseKit/documentation/LicenseKit/License/ValidationError":{"type":"topic","url":"\/documentation\/licensekit\/license\/validationerror","abstract":[{"text":"This enum defines license validation errors that can","type":"text"},{"type":"text","text":" "},{"type":"text","text":"be thrown when a license key is validated."}],"navigatorTitle":[{"text":"ValidationError","kind":"identifier"}],"kind":"symbol","title":"License.ValidationError","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValidationError"}],"identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/License\/ValidationError","role":"symbol"},"doc://com.licensekit.LicenseKit/documentation/LicenseKit/LicenseServiceType/api(configuration:cached:urlSession:licenseMapping:)":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"api","kind":"identifier"},{"text":"(","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10LicenseKit0A11ServiceTypeO16ApiConfigurationa","kind":"typeIdentifier","text":"ApiConfiguration"},{"text":", ","kind":"text"},{"text":"cached","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"text":"urlSession","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSURLSession","text":"URLSession"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"licenseMapping"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:10LicenseKit0A0V","text":"License","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Key","preciseIdentifier":"s:10LicenseKit0A0V3Keya"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"License","preciseIdentifier":"s:10LicenseKit0A0V"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","url":"\/documentation\/licensekit\/licenseservicetype\/api(configuration:cached:urlsession:licensemapping:)","kind":"symbol","abstract":[{"type":"text","text":"An API-based license service."}],"identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/LicenseServiceType\/api(configuration:cached:urlSession:licenseMapping:)","title":"LicenseServiceType.api(configuration:cached:urlSession:licenseMapping:)"},"doc://com.licensekit.LicenseKit/documentation/LicenseKit/LicenseServiceType/cached(service:)":{"type":"topic","kind":"symbol","url":"\/documentation\/licensekit\/licenseservicetype\/cached(service:)","title":"LicenseServiceType.cached(service:)","identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/LicenseServiceType\/cached(service:)","abstract":[{"type":"text","text":"A cached license service."}],"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"cached","kind":"identifier"},{"text":"(","kind":"text"},{"text":"service","kind":"externalParam"},{"kind":"text","text":": "},{"text":"LicenseServiceType","preciseIdentifier":"s:10LicenseKit0A11ServiceTypeO","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://com.licensekit.LicenseKit/documentation/LicenseKit/License/Tier-swift.struct":{"navigatorTitle":[{"kind":"identifier","text":"Tier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Tier"}],"title":"License.Tier","type":"topic","kind":"symbol","url":"\/documentation\/licensekit\/license\/tier-swift.struct","role":"symbol","abstract":[{"text":"This struct represents a license tier, which defines","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the level of service that a license provides."}],"identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/License\/Tier-swift.struct"},"doc://com.licensekit.LicenseKit/documentation/LicenseKit/License/Source-swift.enum":{"navigatorTitle":[{"kind":"identifier","text":"Source"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Source"}],"url":"\/documentation\/licensekit\/license\/source-swift.enum","title":"License.Source","kind":"symbol","abstract":[{"type":"text","text":"This enum defines various license sources from which"},{"text":" ","type":"text"},{"type":"text","text":"licenses can be read or fetched."}],"identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/License\/Source-swift.enum"},"doc://com.licensekit.LicenseKit/documentation/LicenseKit/LicenseServiceType/binary(licenses:)":{"type":"topic","url":"\/documentation\/licensekit\/licenseservicetype\/binary(licenses:)","title":"LicenseServiceType.binary(licenses:)","identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/LicenseServiceType\/binary(licenses:)","kind":"symbol","abstract":[{"type":"text","text":"A binary license service."}],"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"binary","kind":"identifier"},{"text":"(","kind":"text"},{"text":"licenses","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"License","preciseIdentifier":"s:10LicenseKit0A0V"},{"kind":"text","text":"])"}]},"doc://com.licensekit.LicenseKit/documentation/LicenseKit/LicenseServiceType/fileName(fileName:fileExtension:bundle:componentSeparator:licenseMapping:)":{"type":"topic","abstract":[{"type":"text","text":"A file-based license service."}],"title":"LicenseServiceType.fileName(fileName:fileExtension:bundle:componentSeparator:licenseMapping:)","url":"\/documentation\/licensekit\/licenseservicetype\/filename(filename:fileextension:bundle:componentseparator:licensemapping:)","identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/LicenseServiceType\/fileName(fileName:fileExtension:bundle:componentSeparator:licenseMapping:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"fileName","kind":"identifier"},{"text":"(","kind":"text"},{"text":"fileName","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"fileExtension","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"bundle","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSBundle","text":"Bundle","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"componentSeparator"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SJ","kind":"typeIdentifier","text":"Character"},{"text":", ","kind":"text"},{"text":"licenseMapping","kind":"externalParam"},{"kind":"text","text":": (["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"]) "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:10LicenseKit0A0V","text":"License","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.licensekit.LicenseKit/documentation/LicenseKit/LicenseServiceType/proxy(services:)":{"type":"topic","url":"\/documentation\/licensekit\/licenseservicetype\/proxy(services:)","title":"LicenseServiceType.proxy(services:)","identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/LicenseServiceType\/proxy(services:)","kind":"symbol","abstract":[{"type":"text","text":"A license service proxy."}],"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"proxy","kind":"identifier"},{"kind":"text","text":"("},{"text":"services","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"LicenseServiceType","preciseIdentifier":"s:10LicenseKit0A11ServiceTypeO","kind":"typeIdentifier"},{"text":"])","kind":"text"}]},"doc://com.licensekit.LicenseKit/documentation/LicenseKit/LicenseEngine":{"abstract":[{"type":"text","text":"This is the most central class in LicenseKit and is used"},{"text":" ","type":"text"},{"text":"to validate license keys and return any matching license.","type":"text"}],"identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/LicenseEngine","url":"\/documentation\/licensekit\/licenseengine","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LicenseEngine"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"LicenseEngine","kind":"identifier"}],"title":"LicenseEngine"},"doc://com.licensekit.LicenseKit/documentation/LicenseKit/LicenseServiceType/fileUrl(fileUrl:componentSeparator:licenseMapping:)":{"type":"topic","abstract":[{"type":"text","text":"A file-based license service."}],"title":"LicenseServiceType.fileUrl(fileUrl:componentSeparator:licenseMapping:)","url":"\/documentation\/licensekit\/licenseservicetype\/fileurl(fileurl:componentseparator:licensemapping:)","identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/LicenseServiceType\/fileUrl(fileUrl:componentSeparator:licenseMapping:)","kind":"symbol","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"fileUrl","kind":"identifier"},{"kind":"text","text":"("},{"text":"fileUrl","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier","text":"URL"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"componentSeparator"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SJ","text":"Character","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"licenseMapping"},{"kind":"text","text":": (["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10LicenseKit0A0V","kind":"typeIdentifier","text":"License"},{"kind":"text","text":")"}]},"doc://com.licensekit.LicenseKit/documentation/LicenseKit/License":{"navigatorTitle":[{"text":"License","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"License","kind":"identifier"}],"type":"topic","kind":"symbol","title":"License","abstract":[{"text":"This struct represents a software license and also works","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"as a namespace for license-related types."}],"identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/License","url":"\/documentation\/licensekit\/license"},"doc://com.licensekit.LicenseKit/documentation/LicenseKit/LicenseServiceType":{"type":"topic","url":"\/documentation\/licensekit\/licenseservicetype","title":"LicenseServiceType","identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/LicenseServiceType","kind":"symbol","abstract":[{"type":"text","text":"This enum defines various license service types that can"},{"type":"text","text":" "},{"text":"be used to validate license keys and resolve licenses.","type":"text"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LicenseServiceType","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"LicenseServiceType"}]},"doc://com.licensekit.LicenseKit/documentation/LicenseKit":{"kind":"symbol","identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit","abstract":[{"text":"LicenseKit helps you protect your Swift-based software with commercial licenses.","type":"text"}],"type":"topic","role":"collection","title":"LicenseKit","url":"\/documentation\/licensekit"},"doc://com.licensekit.LicenseKit/documentation/LicenseKit/LicenseServiceType/gumroad(productId:cached:urlSession:licenseMapping:)":{"type":"topic","abstract":[{"type":"text","text":"A Gumroad-based license service."}],"title":"LicenseServiceType.gumroad(productId:cached:urlSession:licenseMapping:)","url":"\/documentation\/licensekit\/licenseservicetype\/gumroad(productid:cached:urlsession:licensemapping:)","identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/LicenseServiceType\/gumroad(productId:cached:urlSession:licenseMapping:)","kind":"symbol","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"gumroad","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"productId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"cached","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"urlSession"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)NSURLSession","text":"URLSession","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"licenseMapping","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"License","preciseIdentifier":"s:10LicenseKit0A0V","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Key","preciseIdentifier":"s:10LicenseKit0A0V3Keya","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"LicenseIntegrations","preciseIdentifier":"s:10LicenseKit0A12IntegrationsV"},{"text":".","kind":"text"},{"text":"Gumroad","kind":"typeIdentifier","preciseIdentifier":"s:10LicenseKit0A12IntegrationsV7GumroadV"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10LicenseKit0A12IntegrationsV7GumroadV8PurchaseV","text":"Purchase"},{"text":") -> ","kind":"text"},{"text":"License","preciseIdentifier":"s:10LicenseKit0A0V","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.licensekit.LicenseKit/documentation/LicenseKit/Understanding-Licenses":{"type":"topic","url":"\/documentation\/licensekit\/understanding-licenses","title":"Understanding Licenses","identifier":"doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/Understanding-Licenses","kind":"article","abstract":[{"text":"This article describes the LicenseKit license model.","type":"text"}],"role":"article"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","value":"occ","path":"\/identifier\/interfaceLanguage"},{"value":null,"path":"\/topicSections","op":"add"},{"value":[{"title":"Articles","identifiers":["doc:\/\/com.licensekit.LicenseKit\/documentation\/LicenseKit\/Understanding-Licenses"],"generated":true,"anchor":"Articles"}],"op":"replace","path":"\/seeAlsoSections"}]}]}